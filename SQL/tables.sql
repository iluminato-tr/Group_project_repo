CREATE TABLE population (
	pop_code VARCHAR(10) PRIMARY KEY,
    population_name VARCHAR(20),
	population_description VARCHAR(100),
    sup_code VARCHAR(10),
	sup_description VARCHAR(50)
);

CREATE TABLE sample_table (
	sample_id VARCHAR(10) PRIMARY KEY,
    population_code VARCHAR(10),
	FOREIGN KEY (population_code) REFERENCES population(pop_code),
	superpopulation_code VARCHAR(10)
);

CREATE TABLE VARIANT (
	chromosome VARCHAR(5),
	pos INT,
	snpId VARCHAR(50) PRIMARY KEY, 
	refe VARCHAR(5),
	alt VARCHAR(5),
	geneName VARCHAR(50)			
);

CREATE TABLE pca(
	s_id VARCHAR(10),
	FOREIGN KEY (s_id) REFERENCES sample_table(sample_id),
	PC1 FLOAT (20),
	PC2 FLOAT (20),
	PC3 FLOAT (20),
	PC4 FLOAT (20),
	PC5 FLOAT (20),
	PC6 FLOAT (20),
	PC7 FLOAT (20),
	PC8 FLOAT (20),
	PC9 FLOAT (20),
	PC10 FLOAT (20)	
);

CREATE TABLE SNP_clinical_relevance (
	chrom VARCHAR(5),
	chromStart INT,
	chromEnd INT,
	snpId VARCHAR(50),
	ref_a VARCHAR(20),
	alt_a VARCHAR(20),
	geneName VARCHAR(20),
	hgvscodon VARCHAR(100),
	hgvsprotein VARCHAR (100),
	phenotype VARCHAR(5000),
	molecular_consequence VARCHAR(100),
	variant_significance VARCHAR(100),
	NM_ID VARCHAR(30),
	cytogenic_region VARCHAR(50)
);

SELECT * FROM SNP_clinical_relevance;


CREATE TABLE admixture_q (
	sample_id VARCHAR(10),
	FOREIGN KEY (sample_id) REFERENCES sample_table(sample_id),
	P1 FLOAT (20),
	P2 FLOAT (20),
	P3 FLOAT (20),
	P4 FLOAT (20),
	P5 FLOAT (20)
);

CREATE TABLE population_allele_frq(
	chrom VARCHAR(5),
	pos INT,
	snpId VARCHAR(50),
	FOREIGN KEY (snpId) REFERENCES VARIANT (snpId),
	refe VARCHAR(5),
	alt VARCHAR(5),
	geneName VARCHAR(50), 
	ACB_ref FLOAT (20),
	ACB_alt FLOAT (20),
	ASW_ref FLOAT (20),
	ASW_alt FLOAT (20),
	BEB_ref FLOAT (20),
	BEB_alt FLOAT (20),
	CDX_ref FLOAT (20),
	CDX_alt FLOAT (20),
	CEU_ref FLOAT (20),
	CEU_alt FLOAT (20),
	CHB_ref FLOAT (20),
	CHB_alt FLOAT (20),
	CHS_ref FLOAT (20),
	CHS_alt FLOAT (20),
	CLM_ref FLOAT (20),
	CLM_alt FLOAT (20),
	ESN_ref FLOAT (20),
	ESN_alt FLOAT (20),
	FIN_ref FLOAT (20),
	FIN_alt FLOAT (20),
	GBR_ref FLOAT (20),
	GBR_alt FLOAT (20),
	GIH_ref FLOAT (20),
	GIH_alt FLOAT (20),
	GWD_ref FLOAT (20),
	GWD_alt FLOAT (20),
	IBS_ref FLOAT (20),
	IBS_alt FLOAT (20),
	ITU_ref FLOAT (20),
	ITU_alt FLOAT (20),
	JPT_ref FLOAT (20),
	JPT_alt FLOAT (20),
	KHV_ref FLOAT (20),
	KHV_alt FLOAT (20),
	LWK_ref FLOAT (20),
	LWK_alt FLOAT (20),
	MSL_ref FLOAT (20),
	MSL_alt FLOAT (20),
	MXL_ref FLOAT (20),
	MXL_alt FLOAT (20),
	PEL_ref FLOAT (20),
	PEL_alt FLOAT (20),
	PJL_ref FLOAT (20),
	PJL_alt FLOAT (20),
	PUR_ref FLOAT (20),
	PUR_alt FLOAT (20),
	SIB_ref FLOAT (20),
	SIB_alt FLOAT (20),
	STU_ref FLOAT (20),
	STU_alt FLOAT (20),
	TSI_ref FLOAT (20),
	TSI_alt FLOAT (20),
	YRI_ref FLOAT (20),
	YRI_alt FLOAT (20)
);

CREATE TABLE pop_gen_frq(
	chrom VARCHAR(5),
	pos INT,
	snpId VARCHAR(50),
	FOREIGN KEY (snpId) REFERENCES VARIANT (snpId),
	refe VARCHAR(5),
	alt VARCHAR(5),
	geneName VARCHAR(50), 
	ACB_hom_alt INT,
	ACB_het INT,
	ACB_hom_ref INT,
	ASW_hom_alt INT,
	ASW_het INT,
	ASW_hom_ref INT,
	BEB_hom_alt INT,
	BEB_het INT,
	BEB_hom_ref INT,
	CDX_hom_alt INT,
	CDX_het INT,
	CDX_hom_ref INT,
	CEU_hom_alt INT,
	CEU_het INT,
	CEU_hom_ref INT,
	CHB_hom_alt INT,
	CHB_het INT,
	CHB_hom_ref INT,
	CHS_hom_alt INT,
	CHS_het INT,
	CHS_hom_ref INT,
	CLM_hom_alt INT,
	CLM_het INT,
	CLM_hom_ref INT,
	ESN_hom_alt INT,
	ESN_het INT,
	ESN_hom_ref INT,
	FIN_hom_alt INT,
	FIN_het INT,
	FIN_hom_ref INT,
	GBR_hom_alt INT,
	GBR_het INT,
	GBR_hom_ref INT,
	GIH_hom_alt INT,
	GIH_het INT,
	GIH_hom_ref INT,
	GWD_hom_alt INT,
	GWD_het INT,
	GWD_hom_ref INT,
	IBS_hom_alt INT,
	IBS_het INT,
	IBS_hom_ref INT,
	ITU_hom_alt INT,
	ITU_het INT,
	ITU_hom_ref INT,
	JPT_hom_alt INT,
	JPT_het INT,
	JPT_hom_ref INT,
	KHV_hom_alt INT,
	KHV_het INT,
	KHV_hom_ref INT,
	LWK_hom_alt INT,
	LWK_het INT,
	LWK_hom_ref INT,
	MSL_hom_alt INT,
	MSL_het INT,
	MSL_hom_ref INT,
	MXL_hom_alt INT,
	MXL_het INT,
	MXL_hom_ref INT,
	PEL_hom_alt INT,
	PEL_het INT,
	PEL_hom_ref INT,
	PJL_hom_alt INT,
	PJL_het INT,
	PJL_hom_ref INT,
	PUR_hom_alt INT,
	PUR_het INT,
	PUR_hom_ref INT,
	SIB_hom_alt INT,
	SIB_het INT,
	SIB_hom_ref INT,
	STU_hom_alt INT,
	STU_het INT,
	STU_hom_ref INT,
	TSI_hom_alt INT,
	TSI_het INT,
	TSI_hom_ref INT,
	YRI_hom_alt INT,
	YRI_het INT,
	YRI_hom_ref INT
);